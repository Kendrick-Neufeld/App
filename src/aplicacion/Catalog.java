package aplicacion;

import java.awt.Color;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.SwingConstants;

public class Catalog extends javax.swing.JFrame {

    /**
     * Creates new form Catalog
     */
    public Statement sql;
    int CatalogPage;
    int CatalogPageAmt;
    int[] AllDevices;
    int[] AllAcc;
    boolean AccDevices;
    int xMouse, yMouse;

    public Catalog() {
        initComponents();
        setLocationRelativeTo(null);
        CatalogPage = 0;
    }

    public Catalog(Statement sql) {
        initComponents();
        setLocationRelativeTo(null);
        this.sql = sql;
        CatalogPage = 0;
        AccDevices = true;
        getAllAcc();
        getAllDevices();
        DisplayDevices();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        windowActions = new javax.swing.JPanel();
        minimizeButton = new javax.swing.JPanel();
        minimizeLabel = new javax.swing.JLabel();
        exitButton = new javax.swing.JPanel();
        exitLabel = new javax.swing.JLabel();
        blueStripe = new javax.swing.JPanel();
        redStripe = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        menu = new javax.swing.JButton();
        celulares = new javax.swing.JButton();
        accesorios = new javax.swing.JButton();
        PageNum = new javax.swing.JLabel();
        backButtonPanel = new javax.swing.JPanel();
        BackButton = new javax.swing.JLabel();
        nextButtonPanel = new javax.swing.JPanel();
        NextButton = new javax.swing.JLabel();
        itemPanel = new javax.swing.JPanel();
        ItemAvailable3 = new javax.swing.JLabel();
        image3 = new javax.swing.JLabel();
        ItemName3 = new javax.swing.JLabel();
        ItemPrice3 = new javax.swing.JLabel();
        ItemTitle = new javax.swing.JLabel();
        itemPanel1 = new javax.swing.JPanel();
        ItemAvailable2 = new javax.swing.JLabel();
        image2 = new javax.swing.JLabel();
        ItemName2 = new javax.swing.JLabel();
        ItemPrice2 = new javax.swing.JLabel();
        itemPanel2 = new javax.swing.JPanel();
        ItemAvailable5 = new javax.swing.JLabel();
        image5 = new javax.swing.JLabel();
        ItemName5 = new javax.swing.JLabel();
        ItemPrice5 = new javax.swing.JLabel();
        itemPanel3 = new javax.swing.JPanel();
        ItemAvailable4 = new javax.swing.JLabel();
        image4 = new javax.swing.JLabel();
        ItemName4 = new javax.swing.JLabel();
        ItemPrice4 = new javax.swing.JLabel();
        itemPanel4 = new javax.swing.JPanel();
        ItemAvailable6 = new javax.swing.JLabel();
        image6 = new javax.swing.JLabel();
        ItemName6 = new javax.swing.JLabel();
        ItemPrice6 = new javax.swing.JLabel();
        itemPanel5 = new javax.swing.JPanel();
        ItemAvailable1 = new javax.swing.JLabel();
        image1 = new javax.swing.JLabel();
        ItemName1 = new javax.swing.JLabel();
        ItemPrice1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(247, 247, 247));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headerPanel.setBackground(new java.awt.Color(194, 200, 203));
        headerPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                headerPanelMouseDragged(evt);
            }
        });
        headerPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                headerPanelMousePressed(evt);
            }
        });

        windowActions.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        minimizeButton.setBackground(new java.awt.Color(194, 200, 203));

        minimizeLabel.setBackground(new java.awt.Color(247, 247, 247));
        minimizeLabel.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        minimizeLabel.setForeground(new java.awt.Color(27, 47, 59));
        minimizeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimizeLabel.setText("â€”");
        minimizeLabel.setToolTipText("");
        minimizeLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        minimizeLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimizeLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimizeLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout minimizeButtonLayout = new javax.swing.GroupLayout(minimizeButton);
        minimizeButton.setLayout(minimizeButtonLayout);
        minimizeButtonLayout.setHorizontalGroup(
            minimizeButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(minimizeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );
        minimizeButtonLayout.setVerticalGroup(
            minimizeButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, minimizeButtonLayout.createSequentialGroup()
                .addComponent(minimizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        windowActions.add(minimizeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 40, -1));

        exitButton.setBackground(new java.awt.Color(194, 200, 203));

        exitLabel.setBackground(new java.awt.Color(247, 247, 247));
        exitLabel.setFont(new java.awt.Font("Roboto", 1, 19)); // NOI18N
        exitLabel.setForeground(new java.awt.Color(27, 47, 59));
        exitLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exitLabel.setText("X");
        exitLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        exitLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout exitButtonLayout = new javax.swing.GroupLayout(exitButton);
        exitButton.setLayout(exitButtonLayout);
        exitButtonLayout.setHorizontalGroup(
            exitButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exitButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exitLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );
        exitButtonLayout.setVerticalGroup(
            exitButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, exitButtonLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(exitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        windowActions.add(exitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 40, -1));

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPanelLayout.createSequentialGroup()
                .addGap(0, 920, Short.MAX_VALUE)
                .addComponent(windowActions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(windowActions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(headerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, -1));

        blueStripe.setBackground(new java.awt.Color(27, 47, 59));
        blueStripe.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        redStripe.setBackground(new java.awt.Color(211, 22, 34));

        javax.swing.GroupLayout redStripeLayout = new javax.swing.GroupLayout(redStripe);
        redStripe.setLayout(redStripeLayout);
        redStripeLayout.setHorizontalGroup(
            redStripeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 97, Short.MAX_VALUE)
        );
        redStripeLayout.setVerticalGroup(
            redStripeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );

        blueStripe.add(redStripe, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 64, -1, -1));

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(247, 247, 247));
        jLabel1.setText("Catalog");
        blueStripe.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 29, -1, -1));

        menu.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        menu.setForeground(new java.awt.Color(247, 247, 247));
        menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacion/Imagenes/buttonColor7.png"))); // NOI18N
        menu.setText("Menu");
        menu.setBorder(null);
        menu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuMouseExited(evt);
            }
        });
        menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActionPerformed(evt);
            }
        });
        blueStripe.add(menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 85, 170, 50));

        celulares.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        celulares.setForeground(new java.awt.Color(247, 247, 247));
        celulares.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacion/Imagenes/buttonColor7.png"))); // NOI18N
        celulares.setText("Devices");
        celulares.setBorder(null);
        celulares.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        celulares.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                celularesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                celularesMouseExited(evt);
            }
        });
        celulares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                celularesActionPerformed(evt);
            }
        });
        blueStripe.add(celulares, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 141, 170, 50));

        accesorios.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        accesorios.setForeground(new java.awt.Color(247, 247, 247));
        accesorios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacion/Imagenes/buttonColor7.png"))); // NOI18N
        accesorios.setText("Accessories");
        accesorios.setBorder(null);
        accesorios.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        accesorios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                accesoriosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                accesoriosMouseExited(evt);
            }
        });
        accesorios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accesoriosActionPerformed(evt);
            }
        });
        blueStripe.add(accesorios, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 197, 170, 50));

        PageNum.setFont(new java.awt.Font("Roboto", 1, 20)); // NOI18N
        PageNum.setForeground(new java.awt.Color(247, 247, 247));
        PageNum.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PageNum.setText("1");
        PageNum.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        PageNum.setPreferredSize(new java.awt.Dimension(25, 25));
        blueStripe.add(PageNum, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, 50, 40));

        backButtonPanel.setBackground(new java.awt.Color(27, 47, 59));
        backButtonPanel.setPreferredSize(new java.awt.Dimension(50, 50));

        BackButton.setFont(new java.awt.Font("Roboto Black", 0, 24)); // NOI18N
        BackButton.setForeground(new java.awt.Color(247, 247, 247));
        BackButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BackButton.setText("<");
        BackButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BackButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BackButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BackButtonMouseExited(evt);
            }
        });

        javax.swing.GroupLayout backButtonPanelLayout = new javax.swing.GroupLayout(backButtonPanel);
        backButtonPanel.setLayout(backButtonPanelLayout);
        backButtonPanelLayout.setHorizontalGroup(
            backButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backButtonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BackButton, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
        );
        backButtonPanelLayout.setVerticalGroup(
            backButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BackButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        blueStripe.add(backButtonPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 50, 40));

        nextButtonPanel.setBackground(new java.awt.Color(27, 47, 59));
        nextButtonPanel.setPreferredSize(new java.awt.Dimension(50, 50));

        NextButton.setFont(new java.awt.Font("Roboto Black", 0, 24)); // NOI18N
        NextButton.setForeground(new java.awt.Color(247, 247, 247));
        NextButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NextButton.setText(">");
        NextButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        NextButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NextButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                NextButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                NextButtonMouseExited(evt);
            }
        });

        javax.swing.GroupLayout nextButtonPanelLayout = new javax.swing.GroupLayout(nextButtonPanel);
        nextButtonPanel.setLayout(nextButtonPanelLayout);
        nextButtonPanelLayout.setHorizontalGroup(
            nextButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nextButtonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(NextButton, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
        );
        nextButtonPanelLayout.setVerticalGroup(
            nextButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(NextButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        blueStripe.add(nextButtonPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 260, 50, 40));

        jPanel1.add(blueStripe, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 170, 570));

        itemPanel.setBackground(new java.awt.Color(247, 247, 247));
        itemPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ItemAvailable3.setFont(new java.awt.Font("Roboto", 1, 20)); // NOI18N
        ItemAvailable3.setForeground(new java.awt.Color(89, 182, 50));
        itemPanel.add(ItemAvailable3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 200, 40));

        image3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemPanel.add(image3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 90, 90));

        ItemName3.setFont(new java.awt.Font("Roboto", 1, 20)); // NOI18N
        ItemName3.setForeground(new java.awt.Color(27, 47, 59));
        itemPanel.add(ItemName3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 200, 40));

        ItemPrice3.setFont(new java.awt.Font("Roboto", 0, 20)); // NOI18N
        ItemPrice3.setForeground(new java.awt.Color(27, 47, 59));
        itemPanel.add(ItemPrice3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 200, 30));

        jPanel1.add(itemPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 250, 320, 110));

        ItemTitle.setFont(new java.awt.Font("Roboto", 1, 36)); // NOI18N
        ItemTitle.setForeground(new java.awt.Color(27, 47, 59));
        ItemTitle.setText("Devices");
        jPanel1.add(ItemTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, 230, 40));

        itemPanel1.setBackground(new java.awt.Color(247, 247, 247));
        itemPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ItemAvailable2.setFont(new java.awt.Font("Roboto", 1, 20)); // NOI18N
        ItemAvailable2.setForeground(new java.awt.Color(89, 182, 50));
        itemPanel1.add(ItemAvailable2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 200, 40));

        image2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemPanel1.add(image2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 90, 90));

        ItemName2.setFont(new java.awt.Font("Roboto", 1, 20)); // NOI18N
        ItemName2.setForeground(new java.awt.Color(27, 47, 59));
        itemPanel1.add(ItemName2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 200, 40));

        ItemPrice2.setFont(new java.awt.Font("Roboto", 0, 20)); // NOI18N
        ItemPrice2.setForeground(new java.awt.Color(27, 47, 59));
        itemPanel1.add(ItemPrice2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 200, 30));

        jPanel1.add(itemPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 130, 320, 110));

        itemPanel2.setBackground(new java.awt.Color(247, 247, 247));
        itemPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ItemAvailable5.setFont(new java.awt.Font("Roboto", 1, 20)); // NOI18N
        ItemAvailable5.setForeground(new java.awt.Color(89, 182, 50));
        itemPanel2.add(ItemAvailable5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 200, 40));

        image5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemPanel2.add(image5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 90, 90));

        ItemName5.setFont(new java.awt.Font("Roboto", 1, 20)); // NOI18N
        ItemName5.setForeground(new java.awt.Color(27, 47, 59));
        itemPanel2.add(ItemName5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 200, 40));

        ItemPrice5.setFont(new java.awt.Font("Roboto", 0, 20)); // NOI18N
        ItemPrice5.setForeground(new java.awt.Color(27, 47, 59));
        itemPanel2.add(ItemPrice5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 200, 30));

        jPanel1.add(itemPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 370, 320, 110));

        itemPanel3.setBackground(new java.awt.Color(247, 247, 247));
        itemPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ItemAvailable4.setFont(new java.awt.Font("Roboto", 1, 20)); // NOI18N
        ItemAvailable4.setForeground(new java.awt.Color(89, 182, 50));
        itemPanel3.add(ItemAvailable4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 200, 40));

        image4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemPanel3.add(image4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 90, 90));

        ItemName4.setFont(new java.awt.Font("Roboto", 1, 20)); // NOI18N
        ItemName4.setForeground(new java.awt.Color(27, 47, 59));
        itemPanel3.add(ItemName4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 200, 40));

        ItemPrice4.setFont(new java.awt.Font("Roboto", 0, 20)); // NOI18N
        ItemPrice4.setForeground(new java.awt.Color(27, 47, 59));
        itemPanel3.add(ItemPrice4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 200, 30));

        jPanel1.add(itemPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 250, 320, 110));

        itemPanel4.setBackground(new java.awt.Color(247, 247, 247));
        itemPanel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ItemAvailable6.setFont(new java.awt.Font("Roboto", 1, 20)); // NOI18N
        ItemAvailable6.setForeground(new java.awt.Color(89, 182, 50));
        itemPanel4.add(ItemAvailable6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 200, 40));

        image6.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemPanel4.add(image6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 90, 90));

        ItemName6.setFont(new java.awt.Font("Roboto", 1, 20)); // NOI18N
        ItemName6.setForeground(new java.awt.Color(27, 47, 59));
        itemPanel4.add(ItemName6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 200, 40));

        ItemPrice6.setFont(new java.awt.Font("Roboto", 0, 20)); // NOI18N
        ItemPrice6.setForeground(new java.awt.Color(27, 47, 59));
        itemPanel4.add(ItemPrice6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 200, 30));

        jPanel1.add(itemPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 370, 320, 110));

        itemPanel5.setBackground(new java.awt.Color(247, 247, 247));
        itemPanel5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ItemAvailable1.setFont(new java.awt.Font("Roboto", 1, 20)); // NOI18N
        ItemAvailable1.setForeground(new java.awt.Color(89, 182, 50));
        itemPanel5.add(ItemAvailable1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 200, 40));

        image1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        itemPanel5.add(image1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 90, 90));

        ItemName1.setFont(new java.awt.Font("Roboto", 1, 20)); // NOI18N
        ItemName1.setForeground(new java.awt.Color(27, 47, 59));
        itemPanel5.add(ItemName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 200, 40));

        ItemPrice1.setFont(new java.awt.Font("Roboto", 0, 20)); // NOI18N
        ItemPrice1.setForeground(new java.awt.Color(27, 47, 59));
        itemPanel5.add(ItemPrice1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 200, 30));

        jPanel1.add(itemPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 320, 110));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void minimizeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeLabelMouseClicked
        this.setExtendedState(TableSelect.ICONIFIED);
    }//GEN-LAST:event_minimizeLabelMouseClicked

    private void minimizeLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeLabelMouseEntered
        minimizeButton.setBackground(new Color(146, 147, 149));
    }//GEN-LAST:event_minimizeLabelMouseEntered

    private void minimizeLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeLabelMouseExited
        minimizeButton.setBackground(new Color(194, 200, 203));
    }//GEN-LAST:event_minimizeLabelMouseExited

    private void exitLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLabelMouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitLabelMouseClicked

    private void exitLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLabelMouseEntered
        exitButton.setBackground(new Color(211, 22, 34));
        exitLabel.setForeground(new Color(247, 247, 247));
    }//GEN-LAST:event_exitLabelMouseEntered

    private void exitLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLabelMouseExited
        exitButton.setBackground(new Color(194, 200, 203));
        exitLabel.setForeground(new Color(27, 47, 59));
    }//GEN-LAST:event_exitLabelMouseExited

    private void headerPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerPanelMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_headerPanelMouseDragged

    private void headerPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerPanelMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_headerPanelMousePressed

    private void menuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuMouseEntered
        ImageIcon image = new ImageIcon("src/aplicacion/Imagenes/buttonColor6.png");
        menu.setIcon(image);
    }//GEN-LAST:event_menuMouseEntered

    private void menuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuMouseExited
        ImageIcon image = new ImageIcon("src/aplicacion/Imagenes/buttonColor7.png");
        menu.setIcon(image);
    }//GEN-LAST:event_menuMouseExited

    private void menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuActionPerformed
        MainMenu mainMenu = new MainMenu();
        mainMenu.setVisible(true);
        mainMenu.sql = this.sql;
        this.dispose();
    }//GEN-LAST:event_menuActionPerformed

    private void celularesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_celularesActionPerformed
        // TODO add your handling code here:
        CatalogPage = 0;
        DisplayDevices();
        AccDevices = true;
        ItemTitle.setText("Devices");
    }//GEN-LAST:event_celularesActionPerformed

    private void accesoriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accesoriosActionPerformed
        // TODO add your handling code here:
        CatalogPage = 0;
        DisplayAccesorios();
        AccDevices = false;
        ItemTitle.setText("Accesorios");
    }//GEN-LAST:event_accesoriosActionPerformed

    private void celularesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_celularesMouseEntered
        ImageIcon image = new ImageIcon("src/aplicacion/Imagenes/buttonColor6.png");
        celulares.setIcon(image);
    }//GEN-LAST:event_celularesMouseEntered

    private void celularesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_celularesMouseExited
        ImageIcon image = new ImageIcon("src/aplicacion/Imagenes/buttonColor7.png");
        celulares.setIcon(image);
    }//GEN-LAST:event_celularesMouseExited

    private void accesoriosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accesoriosMouseExited
        ImageIcon image = new ImageIcon("src/aplicacion/Imagenes/buttonColor7.png");
        accesorios.setIcon(image);
    }//GEN-LAST:event_accesoriosMouseExited

    private void accesoriosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accesoriosMouseEntered
        ImageIcon image = new ImageIcon("src/aplicacion/Imagenes/buttonColor6.png");
        accesorios.setIcon(image);
    }//GEN-LAST:event_accesoriosMouseEntered

    private void NextButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NextButtonMouseClicked
        if (AccDevices) {
            if (CatalogPage < AllDevices.length) {
                this.CatalogPage += 6;
                DisplayDevices();
                int num = Integer.parseInt(PageNum.getText());
                num++;
                PageNum.setText("" + num);
            }
        } else {
            if (CatalogPage < AllAcc.length) {
                this.CatalogPage += 6;
                DisplayAccesorios();
                int num = Integer.parseInt(PageNum.getText());
                num++;
                PageNum.setText("" + num);
            }
        }
    }//GEN-LAST:event_NextButtonMouseClicked

    private void BackButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackButtonMouseClicked
        if (AccDevices) {
            if (CatalogPage != 0) {
                this.CatalogPage -= 6;
                DisplayDevices();
                int num = Integer.parseInt(PageNum.getText());
                num--;
                PageNum.setText("" + num);
            }
        } else {
            if (CatalogPage != 0) {
                this.CatalogPage -= 6;
                DisplayAccesorios();
                int num = Integer.parseInt(PageNum.getText());
                num--;
                PageNum.setText("" + num);
            }
        }
    }//GEN-LAST:event_BackButtonMouseClicked

    private void NextButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NextButtonMouseEntered
        NextButton.setForeground(new Color(194, 200, 203));
        nextButtonPanel.setBackground(new Color(25, 42, 52));
    }//GEN-LAST:event_NextButtonMouseEntered

    private void NextButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NextButtonMouseExited
        NextButton.setForeground(new Color(247, 247, 247));
        nextButtonPanel.setBackground(new Color(27, 47, 59));
    }//GEN-LAST:event_NextButtonMouseExited

    private void BackButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackButtonMouseEntered
        BackButton.setForeground(new Color(194, 200, 203));
        backButtonPanel.setBackground(new Color(25, 42, 52));
    }//GEN-LAST:event_BackButtonMouseEntered

    private void BackButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackButtonMouseExited
        BackButton.setForeground(new Color(247, 247, 247));
        backButtonPanel.setBackground(new Color(27, 47, 59));
    }//GEN-LAST:event_BackButtonMouseExited

    /**
     *
     */
    public void DisplayDevices() {
        String DeviceName = "";
        int DevicePrice = 0;
        int availability = 0;
        ResultSet Devicevalues = null;
        for (int i = CatalogPage; i <= (6 + CatalogPage); i++) {
            if (i < AllDevices.length) {
                String query = "Select e.ModNombre, s.DispPrecio, s.Cantidad From Modelo e, Dispositivo s "
                        + "Where e.ModID = (Select i.ModID from Dispositivo i "
                        + "Where i.DispoID = " + AllDevices[i] + " ) " + "and s.DispoID = " + AllDevices[i];
                try {
                    Devicevalues = sql.executeQuery(query);
                } catch (SQLException ex) {
                    System.out.println(ex);
                }
                try {
                    while (Devicevalues.next()) {
                        DeviceName = Devicevalues.getString(1);
                        DevicePrice = Devicevalues.getInt(2);
                        availability = Devicevalues.getInt(3);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(InsertDispositivo.class.getName()).log(Level.SEVERE, null, ex);
                }

                if (i == CatalogPage) {
                    ItemName1.setText(DeviceName);
                    ItemPrice1.setText("$" + DevicePrice + " DOP");
                    if (availability > 0) {
                        ItemAvailable1.setText("Disponible");
                        ItemAvailable1.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable1.setText("No Disponible");
                        ItemAvailable1.setForeground(Color.red);
                    }
                    rsscalelabel.RSScaleLabel.setScaleLabel(image1, "src/aplicacion/Imagenes/" + DeviceName + ".png");
                } else if (i == CatalogPage + 1) {
                    ItemName2.setText(DeviceName);
                    ItemPrice2.setText("$" + DevicePrice + " DOP");
                    if (availability > 0) {
                        ItemAvailable2.setText("Disponible");
                        ItemAvailable2.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable2.setText("No Disponible");
                        ItemAvailable2.setForeground(Color.red);
                    }
                    rsscalelabel.RSScaleLabel.setScaleLabel(image2, "src/aplicacion/Imagenes/" + DeviceName + ".png");
                } else if (i == CatalogPage + 2) {
                    ItemName3.setText(DeviceName);
                    ItemPrice3.setText("$" + DevicePrice + " DOP");
                    if (availability > 0) {
                        ItemAvailable3.setText("Disponible");
                        ItemAvailable3.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable3.setText("No Disponible");
                        ItemAvailable3.setForeground(Color.red);
                    }
                    rsscalelabel.RSScaleLabel.setScaleLabel(image3, "src/aplicacion/Imagenes/" + DeviceName + ".png");
                } else if (i == CatalogPage + 3) {
                    ItemName4.setText(DeviceName);
                    ItemPrice4.setText("$" + DevicePrice + " DOP");
                    if (availability > 0) {
                        ItemAvailable4.setText("Disponible");
                        ItemAvailable4.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable4.setText("No Disponible");
                        ItemAvailable4.setForeground(Color.red);
                    }
                    rsscalelabel.RSScaleLabel.setScaleLabel(image4, "src/aplicacion/Imagenes/" + DeviceName + ".png");
                } else if (i == CatalogPage + 4) {
                    ItemName5.setText(DeviceName);
                    ItemPrice5.setText("$" + DevicePrice + " DOP");
                    if (availability > 0) {
                        ItemAvailable5.setText("Disponible");
                        ItemAvailable5.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable5.setText("No Disponible");
                        ItemAvailable5.setForeground(Color.red);
                    }
                    rsscalelabel.RSScaleLabel.setScaleLabel(image5, "src/aplicacion/Imagenes/" + DeviceName + ".png");
                } else if (i == CatalogPage + 5) {
                    ItemName6.setText(DeviceName);
                    ItemPrice6.setText("$" + DevicePrice + " DOP");
                    if (availability > 0) {
                        ItemAvailable6.setText("Disponible");
                        ItemAvailable6.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable6.setText("No Disponible");
                        ItemAvailable6.setForeground(Color.red);
                    }
                    rsscalelabel.RSScaleLabel.setScaleLabel(image6, "src/aplicacion/Imagenes/" + DeviceName + ".png");
                }

            } else {
                if (i == CatalogPage) {
                    ItemName1.setText("");
                    ItemPrice1.setText("");
                    if (availability > 0) {
                        ItemAvailable1.setText("");
                        ItemAvailable1.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable1.setText("");
                        ItemAvailable1.setForeground(Color.red);
                    }
                    image1.setIcon(null);
                } else if (i == CatalogPage + 1) {
                    ItemName2.setText("");
                    ItemPrice2.setText("");
                    if (availability > 0) {
                        ItemAvailable2.setText("");
                        ItemAvailable2.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable2.setText("");
                        ItemAvailable2.setForeground(Color.red);
                    }
                    image2.setIcon(null);
                } else if (i == CatalogPage + 2) {
                    ItemName3.setText("");
                    ItemPrice3.setText("");
                    if (availability > 0) {
                        ItemAvailable3.setText("");
                        ItemAvailable3.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable3.setText("");
                        ItemAvailable3.setForeground(Color.red);
                    }
                    image3.setIcon(null);
                } else if (i == CatalogPage + 3) {
                    ItemName4.setText("");
                    ItemPrice4.setText("");
                    if (availability > 0) {
                        ItemAvailable4.setText("");
                        ItemAvailable4.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable4.setText("");
                        ItemAvailable4.setForeground(Color.red);
                    }
                    image4.setIcon(null);
                } else if (i == CatalogPage + 4) {
                    ItemName5.setText("");
                    ItemPrice5.setText("");
                    if (availability > 0) {
                        ItemAvailable5.setText("");
                        ItemAvailable5.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable5.setText("");
                        ItemAvailable5.setForeground(Color.red);
                    }
                    image5.setIcon(null);
                } else if (i == CatalogPage + 5) {
                    ItemName6.setText("");
                    ItemPrice6.setText("");
                    if (availability > 0) {
                        ItemAvailable6.setText("");
                        ItemAvailable6.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable6.setText("");
                        ItemAvailable6.setForeground(Color.red);
                    }
                    image6.setIcon(null);
                }

            }

        }
    }

    public void DisplayAccesorios() {
        String AccName = "";
        int AccPrice = 0;
        int availability = 0;
        ResultSet Devicevalues = null;
        for (int i = CatalogPage; i <= (6 + CatalogPage); i++) {
            if (i < AllAcc.length) {
                String query = "select AccNombre,AccPrecio,Cantidad from Accesorio where AccID = " + AllAcc[i];
                try {
                    Devicevalues = sql.executeQuery(query);
                } catch (SQLException ex) {
                    System.out.println(ex);
                }
                try {
                    while (Devicevalues.next()) {
                        AccName = Devicevalues.getString(1);
                        AccPrice = Devicevalues.getInt(2);
                        availability = Devicevalues.getInt(3);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(InsertDispositivo.class.getName()).log(Level.SEVERE, null, ex);
                }

                if (i == CatalogPage) {
                    ItemName1.setText(AccName);
                    ItemPrice1.setText("$" + AccPrice + " DOP");
                    if (availability > 0) {
                        ItemAvailable1.setText("Disponible");
                        ItemAvailable1.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable1.setText("No Disponible");
                        ItemAvailable1.setForeground(Color.red);
                    }
                    rsscalelabel.RSScaleLabel.setScaleLabel(image1, "src/aplicacion/Imagenes/" + AccName + ".png");
                } else if (i == CatalogPage + 1) {
                    ItemName2.setText(AccName);
                    ItemPrice2.setText("$" + AccPrice + " DOP");
                    if (availability > 0) {
                        ItemAvailable2.setText("Disponible");
                        ItemAvailable2.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable2.setText("No Disponible");
                        ItemAvailable2.setForeground(Color.red);
                    }
                    rsscalelabel.RSScaleLabel.setScaleLabel(image2, "src/aplicacion/Imagenes/" + AccName + ".png");
                } else if (i == CatalogPage + 2) {
                    ItemName3.setText(AccName);
                    ItemPrice3.setText("$" + AccPrice + " DOP");
                    if (availability > 0) {
                        ItemAvailable3.setText("Disponible");
                        ItemAvailable3.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable3.setText("No Disponible");
                        ItemAvailable3.setForeground(Color.red);
                    }
                    rsscalelabel.RSScaleLabel.setScaleLabel(image3, "src/aplicacion/Imagenes/" + AccName + ".png");
                } else if (i == CatalogPage + 3) {
                    ItemName4.setText(AccName);
                    ItemPrice4.setText("$" + AccPrice + " DOP");
                    if (availability > 0) {
                        ItemAvailable4.setText("Disponible");
                        ItemAvailable4.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable4.setText("No Disponible");
                        ItemAvailable4.setForeground(Color.red);
                    }
                    rsscalelabel.RSScaleLabel.setScaleLabel(image4, "src/aplicacion/Imagenes/" + AccName + ".png");
                } else if (i == CatalogPage + 4) {
                    ItemName5.setText(AccName);
                    ItemPrice5.setText("$" + AccPrice + " DOP");
                    if (availability > 0) {
                        ItemAvailable5.setText("Disponible");
                        ItemAvailable5.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable5.setText("No Disponible");
                        ItemAvailable5.setForeground(Color.red);
                    }
                    rsscalelabel.RSScaleLabel.setScaleLabel(image5, "src/aplicacion/Imagenes/" + AccName + ".png");
                } else if (i == CatalogPage + 5) {
                    ItemName6.setText(AccName);
                    ItemPrice6.setText("$" + AccPrice + " DOP");
                    if (availability > 0) {
                        ItemAvailable6.setText("Disponible");
                        ItemAvailable6.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable6.setText("No Disponible");
                        ItemAvailable6.setForeground(Color.red);
                    }
                    rsscalelabel.RSScaleLabel.setScaleLabel(image6, "src/aplicacion/Imagenes/" + AccName + ".png");
                }

            } else {
                if (i == CatalogPage) {
                    ItemName1.setText("");
                    ItemPrice1.setText("");
                    if (availability > 0) {
                        ItemAvailable1.setText("");
                        ItemAvailable1.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable1.setText("");
                        ItemAvailable1.setForeground(Color.red);
                    }
                    image1.setIcon(null);
                } else if (i == CatalogPage + 1) {
                    ItemName2.setText("");
                    ItemPrice2.setText("");
                    if (availability > 0) {
                        ItemAvailable2.setText("");
                        ItemAvailable2.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable2.setText("");
                        ItemAvailable2.setForeground(Color.red);
                    }
                    image2.setIcon(null);
                } else if (i == CatalogPage + 2) {
                    ItemName3.setText("");
                    ItemPrice3.setText("");
                    if (availability > 0) {
                        ItemAvailable3.setText("");
                        ItemAvailable3.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable3.setText("");
                        ItemAvailable3.setForeground(Color.red);
                    }
                    image3.setIcon(null);
                } else if (i == CatalogPage + 3) {
                    ItemName4.setText("");
                    ItemPrice4.setText("");
                    if (availability > 0) {
                        ItemAvailable4.setText("");
                        ItemAvailable4.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable4.setText("");
                        ItemAvailable4.setForeground(Color.red);
                    }
                    image4.setIcon(null);
                } else if (i == CatalogPage + 4) {
                    ItemName5.setText("");
                    ItemPrice5.setText("");
                    if (availability > 0) {
                        ItemAvailable5.setText("");
                        ItemAvailable5.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable5.setText("");
                        ItemAvailable5.setForeground(Color.red);
                    }
                    image5.setIcon(null);
                } else if (i == CatalogPage + 5) {
                    ItemName6.setText("");
                    ItemPrice6.setText("");
                    if (availability > 0) {
                        ItemAvailable6.setText("");
                        ItemAvailable6.setForeground(new Color(89, 182, 50));
                    } else {
                        ItemAvailable6.setText("");
                        ItemAvailable6.setForeground(Color.red);
                    }
                    image6.setIcon(null);
                }

            }

        }
    }

    public void getAllAcc() {
        ResultSet Devices = null;
        int AccAmt = 0;
        String query = "select count(AccID) from Accesorio";
        try {
            Devices = sql.executeQuery(query);
        } catch (SQLException ex) {
            System.out.println(ex);
        }
        try {
            while (Devices.next()) {
                AccAmt = Devices.getInt(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(InsertDispositivo.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(AccAmt);
        AllAcc = new int[AccAmt];

        query = "select AccID from Accesorio";
        try {
            Devices = sql.executeQuery(query);
        } catch (SQLException ex) {
            System.out.println(ex);
        }
        try {
            for (int i = 0; Devices.next(); i++) {
                AllAcc[i] = Devices.getInt(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(InsertDispositivo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void getAllDevices() {
        ResultSet Devices = null;
        int DevicesAmt = 0;
        String query = "select count(DispoID) from Dispositivo";
        try {
            Devices = sql.executeQuery(query);
        } catch (SQLException ex) {
            System.out.println(ex);
        }
        try {
            while (Devices.next()) {
                DevicesAmt = Devices.getInt(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(InsertDispositivo.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(DevicesAmt);
        AllDevices = new int[DevicesAmt];

        query = "select DispoID from Dispositivo";
        try {
            Devices = sql.executeQuery(query);
        } catch (SQLException ex) {
            System.out.println(ex);
        }
        try {
            for (int i = 0; Devices.next(); i++) {
                AllDevices[i] = Devices.getInt(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(InsertDispositivo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Catalog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Catalog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Catalog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Catalog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Catalog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BackButton;
    private javax.swing.JLabel ItemAvailable1;
    private javax.swing.JLabel ItemAvailable2;
    private javax.swing.JLabel ItemAvailable3;
    private javax.swing.JLabel ItemAvailable4;
    private javax.swing.JLabel ItemAvailable5;
    private javax.swing.JLabel ItemAvailable6;
    private javax.swing.JLabel ItemName1;
    private javax.swing.JLabel ItemName2;
    private javax.swing.JLabel ItemName3;
    private javax.swing.JLabel ItemName4;
    private javax.swing.JLabel ItemName5;
    private javax.swing.JLabel ItemName6;
    private javax.swing.JLabel ItemPrice1;
    private javax.swing.JLabel ItemPrice2;
    private javax.swing.JLabel ItemPrice3;
    private javax.swing.JLabel ItemPrice4;
    private javax.swing.JLabel ItemPrice5;
    private javax.swing.JLabel ItemPrice6;
    private javax.swing.JLabel ItemTitle;
    private javax.swing.JLabel NextButton;
    private javax.swing.JLabel PageNum;
    private javax.swing.JButton accesorios;
    private javax.swing.JPanel backButtonPanel;
    private javax.swing.JPanel blueStripe;
    private javax.swing.JButton celulares;
    private javax.swing.JPanel exitButton;
    private javax.swing.JLabel exitLabel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel image1;
    private javax.swing.JLabel image2;
    private javax.swing.JLabel image3;
    private javax.swing.JLabel image4;
    private javax.swing.JLabel image5;
    private javax.swing.JLabel image6;
    private javax.swing.JPanel itemPanel;
    private javax.swing.JPanel itemPanel1;
    private javax.swing.JPanel itemPanel2;
    private javax.swing.JPanel itemPanel3;
    private javax.swing.JPanel itemPanel4;
    private javax.swing.JPanel itemPanel5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton menu;
    private javax.swing.JPanel minimizeButton;
    private javax.swing.JLabel minimizeLabel;
    private javax.swing.JPanel nextButtonPanel;
    private javax.swing.JPanel redStripe;
    private javax.swing.JPanel windowActions;
    // End of variables declaration//GEN-END:variables
}
